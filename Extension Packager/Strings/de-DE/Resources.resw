<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutText.Text" xml:space="preserve">
    <value>Diese App dient der Neupaketierung von Chrome-Erweiterungen, um sie im eigenen Webstore hosten und über Richtlinien verteilen zu können.</value>
  </data>
  <data name="AboutTitle.Text" xml:space="preserve">
    <value>Über</value>
  </data>
  <data name="MainPageActionsTitle.Text" xml:space="preserve">
    <value>Los geht's</value>
  </data>
  <data name="MainPageActionsTitle.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="AdvancedSettingsTitle.Text" xml:space="preserve">
    <value>Erweiterte Einstellungen</value>
  </data>
  <data name="ExtensionListPageAllExtensionsListView.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Alle Erweiterungen</value>
  </data>
  <data name="ExtensionListPageTitle.Text" xml:space="preserve">
    <value>Alle Erweiterungen</value>
  </data>
  <data name="AppCrxTextBox.Header" xml:space="preserve">
    <value>Name der CRX-Datei</value>
  </data>
  <data name="AppTitle.Text" xml:space="preserve">
    <value>Extension Packager</value>
  </data>
  <data name="AppXmlTextBox.Header" xml:space="preserve">
    <value>Name der XML-Manifest-Datei</value>
  </data>
  <data name="BackToStartpageButton.Content" xml:space="preserve">
    <value>Startseite</value>
  </data>
  <data name="BackupPathTextBox.Label" xml:space="preserve">
    <value>Sicherungsverzeichnis (privater Schlüssel)</value>
  </data>
  <data name="BackupPathTextBox.PlaceholderText" xml:space="preserve">
    <value>Verzeichnis auswählen</value>
  </data>
  <data name="MainPageBrowserFilterComboBox.AccessKey" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="AllPagesGoBackButton.AccessKey" xml:space="preserve">
    <value>Z</value>
  </data>
  <data name="CrxSelectPageUnpackButton.AccessKey" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="CrxSelectPageOperationToggle.AccessKey" xml:space="preserve">
    <value>M</value>
  </data>
  <data name="MainPageBrowserFilterComboBox.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Browser filtern</value>
  </data>
  <data name="BrowserPathTextBox.Label" xml:space="preserve">
    <value>Pfad zu einem Chromium Browser</value>
  </data>
  <data name="BrowserPathTextBox.PlaceholderText" xml:space="preserve">
    <value>Browser auswählen</value>
  </data>
  <data name="CancelButton.Content" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="ChangeExtButton.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Ändern</value>
  </data>
  <data name="MainPageChangeExtButton.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Erweiterung ändern</value>
  </data>
  <data name="ConfirmSettingsButton.Content" xml:space="preserve">
    <value>Bestätigen</value>
  </data>
  <data name="MainPageCreateExtButton.AccessKey" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="MainPageCreateExtButton.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="MainPageCreateExtButtonDescription.Text" xml:space="preserve">
    <value>Neue Erweiterung erstellen</value>
  </data>
  <data name="MainPageCreateExtButtonTitle.Text" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="CrxSelectPageTitle.Text" xml:space="preserve">
    <value>Neue Erweiterung erstellen/hinzufügen</value>
  </data>
  <data name="CrxSelectPageAdditionInfoDescription.Text" xml:space="preserve">
    <value>Beim Hinzufügen wird die CRX neu verpackt und die Schlüsseldatei ins festgelegte Sicherungsverzeichnis kopiert.</value>
  </data>
  <data name="CrxSelectPageAdditionInfoTitle.Text" xml:space="preserve">
    <value>Hinweis</value>
  </data>
  <data name="CrxSelectPageCrxFileTextBox.Label" xml:space="preserve">
    <value>Pfad zur CRX-Datei</value>
  </data>
  <data name="CrxSelectPageCrxFileTextBox.PlaceholderText" xml:space="preserve">
    <value>CRX-Datei auswählen</value>
  </data>
  <data name="CrxSelectPageOperationTitle.Text" xml:space="preserve">
    <value>Methodenauswahl</value>
  </data>
  <data name="CrxSelectPageOperationToggle.OffContent" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="CrxSelectPageOperationToggle.OnContent" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="CrxSelectPageViewModel1" xml:space="preserve">
    <value>Es wurde keine CRX-Datei ausgewählt oder die ausgewählte Datei wurde nicht gefunden.</value>
  </data>
  <data name="CrxSelectPageViewModel2" xml:space="preserve">
    <value>Beim Entpacken der CRX-Datei oder Lesen des Manifests ist ein Fehler aufgetreten.</value>
  </data>
  <data name="CrxSelectPageViewModel3" xml:space="preserve">
    <value>Die erforderlichen Informationen konnten nicht aus der Manifestdatei gelesen werden.</value>
  </data>
  <data name="CrxSelectPageViewModel4" xml:space="preserve">
    <value>Die Arbeitsverzeichnisse konnten nicht erstellt werden.</value>
  </data>
  <data name="CrxSelectPageViewModel5" xml:space="preserve">
    <value>Das Entpacken der CRX-Datei ist fehlgeschlagen.</value>
  </data>
  <data name="CrxSelectPageViewModel6" xml:space="preserve">
    <value>Das Arbeitsverzeichnis konnte nicht gelöscht werden.</value>
  </data>
  <data name="CrxSelectPageViewModel7" xml:space="preserve">
    <value>Es wurde keine Schlüsseldatei ausgewählt oder die ausgewählte Datei wurde nicht gefunden.</value>
  </data>
  <data name="CrxSelectPagePrivateKeyFileTextBox.Label" xml:space="preserve">
    <value>Schlüsseldatei</value>
  </data>
  <data name="CrxSelectPagePrivateKeyFileTextBox.PlaceholderText" xml:space="preserve">
    <value>Datei auswählen</value>
  </data>
  <data name="DefaultSettingsWarning.Text" xml:space="preserve">
    <value>Warnung: Die Konfiguration konnte nicht geladen werden. Es werden die Standardeinstellungen verwendet.</value>
  </data>
  <data name="DeleteExtButton.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="DependenciesTitle.Text" xml:space="preserve">
    <value>Abhängigkeiten und Referenzen</value>
  </data>
  <data name="ManifestEditPageTitle.Text" xml:space="preserve">
    <value>Manifest bearbeiten</value>
  </data>
  <data name="ExpertModeToggle.Header" xml:space="preserve">
    <value>Konfigurationsauswahl</value>
  </data>
  <data name="ExpertModeToggle.OffContent" xml:space="preserve">
    <value>Einfach</value>
  </data>
  <data name="ExpertModeToggle.OnContent" xml:space="preserve">
    <value>Erweitert</value>
  </data>
  <data name="ExtensionAppXmlTextBox.Header" xml:space="preserve">
    <value>XML-Manifest-Datei</value>
  </data>
  <data name="MainPageExtId.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="XmlManifestEditPageIdTextBox.Header" xml:space="preserve">
    <value>App-ID</value>
  </data>
  <data name="ExtensionKeyParameterTextBox.Header" xml:space="preserve">
    <value>Parametername des Erweiterungsschlüssel</value>
  </data>
  <data name="ExtensionKeyParameterTextBox.PlaceholderText" xml:space="preserve">
    <value>Parameternamen eingeben</value>
  </data>
  <data name="ExtensionListPageViewModel1" xml:space="preserve">
    <value>Das Verzeichnis konnte nicht gelöscht werden.</value>
  </data>
  <data name="ExtensionListPageViewModel2" xml:space="preserve">
    <value>Die Erweiterung konnte nicht aus dem Speicher entfernt werden.</value>
  </data>
  <data name="ExtensionListPageViewModel3" xml:space="preserve">
    <value>Bestätigen</value>
  </data>
  <data name="ExtensionListPageViewModel4" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="ExtensionListPageViewModel5" xml:space="preserve">
    <value>Wollen Sie die Erweiterung "{0}" wirklich löschen?</value>
  </data>
  <data name="ExtensionListPageViewModel6" xml:space="preserve">
    <value>Die Erweiterung wird aus dem Speicher entfernt. Die Verzeichnisse
"{0}" und
"{1}"
werden gelöscht.</value>
  </data>
  <data name="ExtensionListPageViewModel7" xml:space="preserve">
    <value>Die Erweiterung konnte nicht gelöscht werden.</value>
  </data>
  <data name="ExtensionListPageViewModel8" xml:space="preserve">
    <value>Die Erweiterungen konnten nicht aus dem Speicher geladen werden.</value>
  </data>
  <data name="ManifestEditPageManifestTextBox.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Vorschau</value>
  </data>
  <data name="ManifestEditPageManifestTextBox.AccessKey" xml:space="preserve">
    <value>M</value>
  </data>
  <data name="ManifestEditPageNameTextBox.Header" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ManifestEditPageNameTextBox.AccessKey" xml:space="preserve">
    <value>N</value>
  </data>
  <data name="ExtensionPathParameterTextBox.Header" xml:space="preserve">
    <value>Parametername des Erweiterungspfads</value>
  </data>
  <data name="ExtensionPathParameterTextBox.PlaceholderText" xml:space="preserve">
    <value>Parameternamen eingeben</value>
  </data>
  <data name="ManifestEditPageShortNameTextBox.Header" xml:space="preserve">
    <value>Kurzname</value>
  </data>
  <data name="ManifestEditPageShortNameTextBox.AccessKey" xml:space="preserve">
    <value>K</value>
  </data>
  <data name="MainPageExtTitle.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="MainPageExtUpdate.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Aktualisierungsdatum</value>
  </data>
  <data name="MainPageExtVersion.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="ManifestEditPageVersionTextBox.Header" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="ManifestEditPageVersionTextBox.AccessKey" xml:space="preserve">
    <value>V</value>
  </data>
  <data name="ExtensionListPageToolbar.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Werkzeugleiste</value>
  </data>
  <data name="CrxSelectPageExtractCrxMessage.Text" xml:space="preserve">
    <value>Entpacke Erweiterung...</value>
  </data>
  <data name="PathTextBoxFileDialogButton.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Datei auswählen</value>
  </data>
  <data name="FileFinder1" xml:space="preserve">
    <value>Der Verzeichnispfad "{0}" ist ungültig oder das Verzeichnis existiert nicht.</value>
  </data>
  <data name="FileFinder2" xml:space="preserve">
    <value>Die gesuchte Dateierweiterung darf nicht leer sein und keine ungültigen Zeichen enthalten.</value>
  </data>
  <data name="FileFinder3" xml:space="preserve">
    <value>Es konnten aufgrund eines Fehler keine Dateien gefunden werden.</value>
  </data>
  <data name="FinishAddExtButton.Content" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="XmlManifestEditPageFinishButton.Content" xml:space="preserve">
    <value>Fertigstellen</value>
  </data>
  <data name="FirstRunInfo.Text" xml:space="preserve">
    <value>Die Standardeinstellungen wurden geladen. Bitte konfigurieren Sie die Vorgaben.</value>
  </data>
  <data name="AllPagesGoBackButton.Content" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="ImprintTitle.Text" xml:space="preserve">
    <value>Impressum und Info</value>
  </data>
  <data name="InvalideNameWarning.Text" xml:space="preserve">
    <value>Der Name darf nicht leer sein.</value>
  </data>
  <data name="InvalideShortNameWarning.Text" xml:space="preserve">
    <value>Der Kurzname darf nur Buchstaben, Zahlen sowie Unter- und Bindestriche enthalten.</value>
  </data>
  <data name="MainPageLastModExtListView.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Zuletzt veränderte Erweiterungen</value>
  </data>
  <data name="MainPageLastModTitle.Text" xml:space="preserve">
    <value>Zuletzt erstellt/aktualisiert</value>
  </data>
  <data name="LicenseText.Text" xml:space="preserve">
    <value>Lizenz: </value>
  </data>
  <data name="ListItemEditExtButton.Content" xml:space="preserve">
    <value>Ändern</value>
  </data>
  <data name="LoadSettings.Text" xml:space="preserve">
    <value>Lade die Konfiguration...</value>
  </data>
  <data name="MainPageAddExtButton.AccessKey" xml:space="preserve">
    <value>H</value>
  </data>
  <data name="MainPageAddExtDescriptionButton.Text" xml:space="preserve">
    <value>Vorhandene Erweiterung hinzufügen</value>
  </data>
  <data name="MainPageAddExtTitleButton.Text" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="MainPageShowExtButton.AccessKey" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="MainPageShowExtButtonDescription.Text" xml:space="preserve">
    <value>Alle Erweiterungen anzeigen</value>
  </data>
  <data name="MainPageShowExtButtonTitle.Text" xml:space="preserve">
    <value>Anzeigen</value>
  </data>
  <data name="MainWindowViewModel2" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="ManifestEditPageViewModel1" xml:space="preserve">
    <value>Das Schreiben der Manifestdatei ist fehlgeschlagen. Prüfen Sie, ob auf die Datei Zugriff besteht.</value>
  </data>
  <data name="ManifestEditPageViewModel2" xml:space="preserve">
    <value>Die Erweiterung konnte nicht gepackt werden. Prüfen Sie den Pfad des Browser, die Parameter und den Zugriff auf das Verzeichnis.</value>
  </data>
  <data name="ManifestEditPageViewModel3" xml:space="preserve">
    <value>Die Update-URL der Manifestdatei konnte nicht verändert werden.</value>
  </data>
  <data name="ManifestEditPageViewModel4" xml:space="preserve">
    <value>Die Erweiterungs-ID konnte nicht ermittelt werden.</value>
  </data>
  <data name="ManifestEditPageViewModel5" xml:space="preserve">
    <value>Die Suche nach dem privaten Schlüssel (PEM-Datei) ist fehlgeschlagen.</value>
  </data>
  <data name="ManifestEditPageViewModel6" xml:space="preserve">
    <value>Im Verzeichnis wurde keine oder mehrere private Schlüssel gefunden. Verschieben/Löschen Sie die unbenötigte Schlüsseldatei.</value>
  </data>
  <data name="ManifestEditPageViewModel7" xml:space="preserve">
    <value>Der Name darf keinen Zeilenumbruch enthalten und nicht länger als 64 Zeichen lang sein.</value>
  </data>
  <data name="ManifestEditPageViewModel8" xml:space="preserve">
    <value>Der Kurzname darf nur Buchstaben, Zahlen, Unter- und Bindestriche enthalten und nicht länger als 64 Zeichen lang sein.</value>
  </data>
  <data name="ManifestEditPageViewModel9" xml:space="preserve">
    <value>Die CRX Datei oder Schlüsseldatei konnten nicht gelöscht werden.</value>
  </data>
  <data name="ManifestEditPageManifestGroupTitle.Text" xml:space="preserve">
    <value>Manifestvorschau</value>
  </data>
  <data name="ManifestEditPageManifestPreviewButton.Content" xml:space="preserve">
    <value>Anzeigen</value>
  </data>
  <data name="ManifestEditPageManifestPreviewButton.AccessKey" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="MenuItemsProvider1" xml:space="preserve">
    <value>Startseite</value>
  </data>
  <data name="MenuItemsProvider2" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="MenuItemsProvider3" xml:space="preserve">
    <value>Impressum</value>
  </data>
  <data name="MenuItemsProvider4" xml:space="preserve">
    <value>Übersicht</value>
  </data>
  <data name="MyPathTextBox.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Dateiauswahl</value>
  </data>
  <data name="MyTitleBar.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Titelleiste</value>
  </data>
  <data name="NewExtensionButton.Content" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="NextStepButton.Content" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="CrxSelectPageUnpackButton.Content" xml:space="preserve">
    <value>Entpacken</value>
  </data>
  <data name="OutputPathTextBox.Label" xml:space="preserve">
    <value>Ausgabepfad</value>
  </data>
  <data name="OutputPathTextBox.PlaceholderText" xml:space="preserve">
    <value>Verzeichnis auswählen</value>
  </data>
  <data name="OutputUrlTextBox.Header" xml:space="preserve">
    <value>URL-Pfad der Erweiterungen</value>
  </data>
  <data name="ManifestEditPagePackButton.Content" xml:space="preserve">
    <value>Packen</value>
  </data>
  <data name="ManifestEditPagePackButton.AccessKey" xml:space="preserve">
    <value>P</value>
  </data>
  <data name="ManifestEditPagePackMessage.Text" xml:space="preserve">
    <value>Packe Erweiterung...</value>
  </data>
  <data name="PolicyStringTextBox.Header" xml:space="preserve">
    <value>Verwenden Sie diesen Wert in einer Gruppenrichtlinie, um die Erweiterung zu installieren</value>
  </data>
  <data name="XmlManifestEditPageFinishMessage.Text" xml:space="preserve">
    <value>Führe Nachbearbeitung durch...</value>
  </data>
  <data name="PrivatKeyTextBox.Header" xml:space="preserve">
    <value>Name der PEM-Datei (privater Schlüssel)</value>
  </data>
  <data name="AllPagesResetValuesButton.Content" xml:space="preserve">
    <value>Zurücksetzen</value>
  </data>
  <data name="AllPagesResetValuesButton.AccessKey" xml:space="preserve">
    <value>U</value>
  </data>
  <data name="SearchFieldButton.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Suche ausführen</value>
  </data>
  <data name="MainPageSearchField.PlaceholderText" xml:space="preserve">
    <value>Nach Erweiterung suchen (Alt+S)</value>
  </data>
  <data name="MainPageSearchField.SearchAccessKey" xml:space="preserve">
    <value>S</value>
  </data>
  <data name="CrxSelectPageCrxFileTextBox.InputAccessKey" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="CrxSelectPagePrivateKeyFileTextBox.InputAccessKey" xml:space="preserve">
    <value>S</value>
  </data>
  <data name="SearchFieldTextBox.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Suchbegriff eingeben</value>
  </data>
  <data name="SettingsTitle.Text" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="SettingsViewModel1" xml:space="preserve">
    <value>Die Konfigurationsdatei konnte nicht geladen werden. Stattdessen werden die Standardeinstellungen verwendet.</value>
  </data>
  <data name="SettingsViewModel2" xml:space="preserve">
    <value>Fehler beim Laden der Resourcen</value>
  </data>
  <data name="SourceCodeText.Text" xml:space="preserve">
    <value>Quelltext: </value>
  </data>
  <data name="MainPageTitle.Text" xml:space="preserve">
    <value>Startseite</value>
  </data>
  <data name="SuccessTitle.Text" xml:space="preserve">
    <value>Fertig!</value>
  </data>
  <data name="UseShortnameCheckbox.Content" xml:space="preserve">
    <value>Verwende einen Kurznamen als Verzeichnisname</value>
  </data>
  <data name="VersionText.Text" xml:space="preserve">
    <value>Version: </value>
  </data>
  <data name="WorkPathTextBox.Label" xml:space="preserve">
    <value>Arbeitsverzeichnis (optional)</value>
  </data>
  <data name="WorkPathTextBox.PlaceholderText" xml:space="preserve">
    <value>Verzeichnis auswählen</value>
  </data>
  <data name="XmlManifestEditPageTitle.Text" xml:space="preserve">
    <value>XML Manifest erstellen</value>
  </data>
  <data name="XmlManifestPageViewModel1" xml:space="preserve">
    <value>Die Erweiterung konnte nicht im Zielverzeichnis bereitgestellt werden.</value>
  </data>
  <data name="XmlManifestPageViewModel2" xml:space="preserve">
    <value>Die Erweiterung konnte nicht im Sicherungsverzeichnis gesichert werden.</value>
  </data>
  <data name="XmlManifestPageViewModel3" xml:space="preserve">
    <value>Das XML-Manifest konnte nicht erstellt werden.</value>
  </data>
  <data name="XmlManifestPageViewModel4" xml:space="preserve">
    <value>Der Richtlinienwert konnte nicht erstellt werden, weil der Name invalide ist.</value>
  </data>
  <data name="XmlManifestPageViewModel5" xml:space="preserve">
    <value>Das Arbeitsverzeichnis konnte nicht gelöscht werden.</value>
  </data>
  <data name="XmlManifestEditPagePreviewButton.Content" xml:space="preserve">
    <value>Anzeigen</value>
  </data>
  <data name="XmlManifestEditPagePreviewButton.AccessKey" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="XmlManifestEditPageXmlManifestTextBox.[using:Microsoft.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Vorschau</value>
  </data>
  <data name="XmlManifestEditPageXmlManifestTextBox.AccessKey" xml:space="preserve">
    <value>M</value>
  </data>
  <data name="XmlManifestEditPageManifestGroupTitle.Text" xml:space="preserve">
    <value>XML-Manifest</value>
  </data>
  <data name="XmlManifestEditPageFinishButton.AccessKey" xml:space="preserve">
    <value>F</value>
  </data>
  <data name="XmlManifestEditPageIdTextBox.AccessKey" xml:space="preserve">
    <value>I</value>
  </data>
  <data name="ExtensionListPageCreateButton.Name" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="ExtensionListPageCreateButton.AccessKey" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="ExtensionListPageCreateButton.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="ExtensionListPageAddButton.Name" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="ExtensionListPageAddButton.AccessKey" xml:space="preserve">
    <value>H</value>
  </data>
  <data name="ExtensionListPageAddButton.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="ExtensionListPageDeleteButton.Name" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="ExtensionListPageDeleteButton.AccessKey" xml:space="preserve">
    <value>L</value>
  </data>
  <data name="ExtensionListPageDeleteButton.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="ExtensionListPageChangeButton.Name" xml:space="preserve">
    <value>Aktualisieren</value>
  </data>
  <data name="ExtensionListPageChangeButton.AccessKey" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="ExtensionListPageChangeButton.[using:Microsoft.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Aktualisieren</value>
  </data>
  <data name="ExtensionListPageExtensionTitle.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ExtensionListPageExtensionId.Name" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="ExtensionListPageExtensionVersion.Name" xml:space="preserve">
    <value>Version</value>
  </data>
</root>